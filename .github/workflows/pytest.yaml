name: pytest

on:
  push:
    branches:
    - main
    paths:
    - 'pypandoctemplates/**'
    - 'docs/source/**'
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
    - 'pypandoctemplates/**'
    - 'docs/source/**'
  workflow_dispatch:

concurrency:
  group: pytest-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3

      # Setup Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
      - uses: actions/cache@v3
        id: pipenv-cache
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-pipenv-${{ hashFiles('Pipfile.lock') }}
      - name: Install dependencies
        if: steps.pipenv-cache.outputs.cache-hit != 'true'
        run: |
          pipenv install --dev --python ${{ matrix.python-version }}
          pipenv graph

      # Run flake8 and pytest
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pipenv run pytest
